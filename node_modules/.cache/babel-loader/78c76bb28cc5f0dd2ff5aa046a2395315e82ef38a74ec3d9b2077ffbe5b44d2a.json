{"ast":null,"code":"var _jsxFileName = \"/home/tania/react/Clase/formulariopiel/src/componentes/preguntas.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Card, CardTitle, Col, Row } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pregunta(props) {\n  _s();\n  // Usar un estado para controlar el color de cada tarjeta de botones\n  const [colores, setColores] = useState(() => {\n    // Inicializar el estado con el color por defecto para cada tarjeta\n    return props.preguns.map(() => props.color[0]);\n  });\n  const handleClick = (cardIndex, buttonIndex, valor) => {\n    // Crear una copia del array de colores\n    const newColores = [...colores];\n    // Cambiar el color del botón presionado en la tarjeta específica\n    newColores[cardIndex] = props.color[1];\n    // Actualizar el estado de los colores\n    setColores(newColores);\n    props.contar(valor);\n  };\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      sm: \"6\",\n      children: props.preguns.map((pregunta, cardIndex) => /*#__PURE__*/_jsxDEV(Card, {\n        body: true,\n        className: \"my-2\",\n        style: {\n          width: '30rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h5\",\n          children: pregunta.texto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), pregunta.respuestas.map((respuesta, buttonIndex) => /*#__PURE__*/_jsxDEV(Button, {\n          color: colores[cardIndex] // Usar el color correspondiente desde el estado\n          ,\n          outline: true,\n          onClick: () => handleClick(cardIndex, buttonIndex, respuesta.valor),\n          children: respuesta.respuesta\n        }, buttonIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }, this))]\n      }, cardIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(Pregunta, \"N1IZfmHJMankksWilVr0ZNqn15k=\");\n_c = Pregunta;\nvar _c;\n$RefreshReg$(_c, \"Pregunta\");","map":{"version":3,"names":["React","useState","Button","Card","CardTitle","Col","Row","jsxDEV","_jsxDEV","Pregunta","props","_s","colores","setColores","preguns","map","color","handleClick","cardIndex","buttonIndex","valor","newColores","contar","children","sm","pregunta","body","className","style","width","tag","texto","fileName","_jsxFileName","lineNumber","columnNumber","respuestas","respuesta","outline","onClick","_c","$RefreshReg$"],"sources":["/home/tania/react/Clase/formulariopiel/src/componentes/preguntas.js"],"sourcesContent":["import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Card, CardTitle, Col, Row } from 'reactstrap';\n\nexport default function Pregunta(props) {\n    // Usar un estado para controlar el color de cada tarjeta de botones\n    const [colores, setColores] = useState(() => {\n        // Inicializar el estado con el color por defecto para cada tarjeta\n        return props.preguns.map(() => props.color[0]);\n    });\n\n    const handleClick = (cardIndex, buttonIndex, valor) => {\n        // Crear una copia del array de colores\n        const newColores = [...colores];\n        // Cambiar el color del botón presionado en la tarjeta específica\n        newColores[cardIndex] = props.color[1];\n        // Actualizar el estado de los colores\n        setColores(newColores);\n        props.contar(valor);\n    };\n\n    return (\n        <Row>\n            <Col sm=\"6\">\n                {props.preguns.map((pregunta, cardIndex) => (\n                    <Card\n                        key={cardIndex}\n                        body\n                        className=\"my-2\"\n                        style={{ width: '30rem' }}\n                    >\n                        <CardTitle tag=\"h5\">{pregunta.texto}</CardTitle>\n                        {pregunta.respuestas.map((respuesta, buttonIndex) => (\n                            <Button\n                                key={buttonIndex}\n                                color={colores[cardIndex]} // Usar el color correspondiente desde el estado\n                                outline\n                                onClick={() => handleClick(cardIndex, buttonIndex, respuesta.valor)}\n                            >\n                                {respuesta.respuesta}\n                            </Button>\n                        ))}\n                    </Card>\n                ))}\n            </Col>\n        </Row>\n    );\n}\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,sCAAsC;AAC7C,SAASC,MAAM,EAAEC,IAAI,EAAEC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpC;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,MAAM;IACzC;IACA,OAAOS,KAAK,CAACI,OAAO,CAACC,GAAG,CAAC,MAAML,KAAK,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC;EAClD,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAGA,CAACC,SAAS,EAAEC,WAAW,EAAEC,KAAK,KAAK;IACnD;IACA,MAAMC,UAAU,GAAG,CAAC,GAAGT,OAAO,CAAC;IAC/B;IACAS,UAAU,CAACH,SAAS,CAAC,GAAGR,KAAK,CAACM,KAAK,CAAC,CAAC,CAAC;IACtC;IACAH,UAAU,CAACQ,UAAU,CAAC;IACtBX,KAAK,CAACY,MAAM,CAACF,KAAK,CAAC;EACvB,CAAC;EAED,oBACIZ,OAAA,CAACF,GAAG;IAAAiB,QAAA,eACAf,OAAA,CAACH,GAAG;MAACmB,EAAE,EAAC,GAAG;MAAAD,QAAA,EACNb,KAAK,CAACI,OAAO,CAACC,GAAG,CAAC,CAACU,QAAQ,EAAEP,SAAS,kBACnCV,OAAA,CAACL,IAAI;QAEDuB,IAAI;QACJC,SAAS,EAAC,MAAM;QAChBC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAAN,QAAA,gBAE1Bf,OAAA,CAACJ,SAAS;UAAC0B,GAAG,EAAC,IAAI;UAAAP,QAAA,EAAEE,QAAQ,CAACM;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,EAC/CV,QAAQ,CAACW,UAAU,CAACrB,GAAG,CAAC,CAACsB,SAAS,EAAElB,WAAW,kBAC5CX,OAAA,CAACN,MAAM;UAEHc,KAAK,EAAEJ,OAAO,CAACM,SAAS,CAAE,CAAC;UAAA;UAC3BoB,OAAO;UACPC,OAAO,EAAEA,CAAA,KAAMtB,WAAW,CAACC,SAAS,EAAEC,WAAW,EAAEkB,SAAS,CAACjB,KAAK,CAAE;UAAAG,QAAA,EAEnEc,SAAS,CAACA;QAAS,GALflB,WAAW;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMZ,CACX,CAAC;MAAA,GAfGjB,SAAS;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAgBZ,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACxB,EAAA,CA3CuBF,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}