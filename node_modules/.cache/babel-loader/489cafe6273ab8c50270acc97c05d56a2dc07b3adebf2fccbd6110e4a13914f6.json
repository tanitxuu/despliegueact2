{"ast":null,"code":"var _jsxFileName = \"/home/tania/react/Clase/formulariopiel/src/componentes/resul.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, CardBody, CardTitle, CardText, Col, Row } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Resultado(props) {\n  // Obtener el resultado según el contador\n  const resultado = props.obtenerResultado(props.contador);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      sm: \"6\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"my-2\",\n        style: {\n          width: '30rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            tag: \"h5\",\n            children: \"Resultado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }, this), resultado ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(CardText, {\n              children: [\"Tipo de piel: \", resultado.tipo]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CardText, {\n              children: [\"Descripci\\xF3n: \", resultado.descripcion]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(CardText, {\n            children: \"No se encontr\\xF3 ning\\xFAn resultado.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_c = Resultado;\nvar _c;\n$RefreshReg$(_c, \"Resultado\");","map":{"version":3,"names":["React","Card","CardBody","CardTitle","CardText","Col","Row","jsxDEV","_jsxDEV","Resultado","props","resultado","obtenerResultado","contador","children","sm","className","style","width","tag","fileName","_jsxFileName","lineNumber","columnNumber","tipo","descripcion","_c","$RefreshReg$"],"sources":["/home/tania/react/Clase/formulariopiel/src/componentes/resul.js"],"sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, CardBody, CardTitle, CardText, Col, Row } from 'reactstrap';\n\nexport default function Resultado(props) {\n    // Obtener el resultado según el contador\n    const resultado = props.obtenerResultado(props.contador);\n\n    return (\n        <Row>\n            <Col sm=\"6\">\n                <Card className=\"my-2\" style={{ width: '30rem' }}>\n                    <CardBody>\n                        <CardTitle tag=\"h5\">Resultado</CardTitle>\n                        {resultado ? (\n                            <div>\n                                <CardText>Tipo de piel: {resultado.tipo}</CardText>\n                                <CardText>Descripción: {resultado.descripcion}</CardText>\n                            </div>\n                        ) : (\n                            <CardText>No se encontró ningún resultado.</CardText>\n                        )}\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    );\n}\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,sCAAsC;AAC7C,SAASC,IAAI,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,GAAG,EAAEC,GAAG,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3E,eAAe,SAASC,SAASA,CAACC,KAAK,EAAE;EACrC;EACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,gBAAgB,CAACF,KAAK,CAACG,QAAQ,CAAC;EAExD,oBACIL,OAAA,CAACF,GAAG;IAAAQ,QAAA,eACAN,OAAA,CAACH,GAAG;MAACU,EAAE,EAAC,GAAG;MAAAD,QAAA,eACPN,OAAA,CAACP,IAAI;QAACe,SAAS,EAAC,MAAM;QAACC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAAJ,QAAA,eAC7CN,OAAA,CAACN,QAAQ;UAAAY,QAAA,gBACLN,OAAA,CAACL,SAAS;YAACgB,GAAG,EAAC,IAAI;YAAAL,QAAA,EAAC;UAAS;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,EACxCZ,SAAS,gBACNH,OAAA;YAAAM,QAAA,gBACIN,OAAA,CAACJ,QAAQ;cAAAU,QAAA,GAAC,gBAAc,EAACH,SAAS,CAACa,IAAI;YAAA;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eACnDf,OAAA,CAACJ,QAAQ;cAAAU,QAAA,GAAC,kBAAa,EAACH,SAAS,CAACc,WAAW;YAAA;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxD,CAAC,gBAENf,OAAA,CAACJ,QAAQ;YAAAU,QAAA,EAAC;UAAgC;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CACvD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACG,EAAA,GAvBuBjB,SAAS;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}