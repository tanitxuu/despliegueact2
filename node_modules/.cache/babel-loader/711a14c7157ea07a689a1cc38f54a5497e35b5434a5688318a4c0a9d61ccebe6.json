{"ast":null,"code":"var _jsxFileName = \"/home/tania/react/Clase/formulariopiel/src/componentes/preguntas.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Card, CardTitle, Col, Row } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pregunta(props) {\n  const handleClick = (i, bi, valor) => {\n    props.contar(valor); // Sumar el valor del botón al contador\n  };\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      sm: \"6\",\n      children: props.preguns.map((pregunta, i) => /*#__PURE__*/_jsxDEV(Card, {\n        body: true,\n        className: \"my-2\",\n        style: {\n          width: '30rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h5\",\n          children: pregunta.texto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this), pregunta.respuestas.map((respuesta, bi) => /*#__PURE__*/_jsxDEV(Button, {\n          color: props.color[i][bi] // Usar el color correspondiente desde los props\n          ,\n          outline: true,\n          onClick: () => handleClick(i, bi, respuesta.valor),\n          style: {\n            marginRight: '5px',\n            marginBottom: '5px'\n          } // Estilo adicional para separar los botones\n          ,\n          children: respuesta.respuesta\n        }, bi, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }, this))]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_c = Pregunta;\nvar _c;\n$RefreshReg$(_c, \"Pregunta\");","map":{"version":3,"names":["React","Button","Card","CardTitle","Col","Row","jsxDEV","_jsxDEV","Pregunta","props","handleClick","i","bi","valor","contar","children","sm","preguns","map","pregunta","body","className","style","width","tag","texto","fileName","_jsxFileName","lineNumber","columnNumber","respuestas","respuesta","color","outline","onClick","marginRight","marginBottom","_c","$RefreshReg$"],"sources":["/home/tania/react/Clase/formulariopiel/src/componentes/preguntas.js"],"sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Card, CardTitle, Col, Row } from 'reactstrap';\n\nexport default function Pregunta(props) {\n\n    const handleClick = (i, bi, valor) => {\n        props.contar(valor); // Sumar el valor del botón al contador\n    };\n\n    return (\n        <Row>\n            <Col sm=\"6\">\n                {props.preguns.map((pregunta, i) => (\n                    <Card\n                        key={i}\n                        body\n                        className=\"my-2\"\n                        style={{ width: '30rem' }}\n                    >\n                        <CardTitle tag=\"h5\">{pregunta.texto}</CardTitle>\n                        {pregunta.respuestas.map((respuesta, bi) => (\n                            <Button\n                                key={bi}\n                                color={props.color[i][bi]} // Usar el color correspondiente desde los props\n                                outline\n                                onClick={() => handleClick(i, bi, respuesta.valor)}\n                                style={{ marginRight: '5px', marginBottom: '5px' }} // Estilo adicional para separar los botones\n                            >\n                                {respuesta.respuesta}\n                            </Button>\n                        ))}\n                    </Card>\n                ))}\n            </Col>\n        </Row>\n    );\n}\n\n\n\n\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,sCAAsC;AAC7C,SAASC,MAAM,EAAEC,IAAI,EAAEC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAEpC,MAAMC,WAAW,GAAGA,CAACC,CAAC,EAAEC,EAAE,EAAEC,KAAK,KAAK;IAClCJ,KAAK,CAACK,MAAM,CAACD,KAAK,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,oBACIN,OAAA,CAACF,GAAG;IAAAU,QAAA,eACAR,OAAA,CAACH,GAAG;MAACY,EAAE,EAAC,GAAG;MAAAD,QAAA,EACNN,KAAK,CAACQ,OAAO,CAACC,GAAG,CAAC,CAACC,QAAQ,EAAER,CAAC,kBAC3BJ,OAAA,CAACL,IAAI;QAEDkB,IAAI;QACJC,SAAS,EAAC,MAAM;QAChBC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAAR,QAAA,gBAE1BR,OAAA,CAACJ,SAAS;UAACqB,GAAG,EAAC,IAAI;UAAAT,QAAA,EAAEI,QAAQ,CAACM;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,EAC/CV,QAAQ,CAACW,UAAU,CAACZ,GAAG,CAAC,CAACa,SAAS,EAAEnB,EAAE,kBACnCL,OAAA,CAACN,MAAM;UAEH+B,KAAK,EAAEvB,KAAK,CAACuB,KAAK,CAACrB,CAAC,CAAC,CAACC,EAAE,CAAE,CAAC;UAAA;UAC3BqB,OAAO;UACPC,OAAO,EAAEA,CAAA,KAAMxB,WAAW,CAACC,CAAC,EAAEC,EAAE,EAAEmB,SAAS,CAAClB,KAAK,CAAE;UACnDS,KAAK,EAAE;YAAEa,WAAW,EAAE,KAAK;YAAEC,YAAY,EAAE;UAAM,CAAE,CAAC;UAAA;UAAArB,QAAA,EAEnDgB,SAAS,CAACA;QAAS,GANfnB,EAAE;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOH,CACX,CAAC;MAAA,GAhBGlB,CAAC;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiBJ,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACQ,EAAA,GAjCuB7B,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}