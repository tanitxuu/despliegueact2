{"ast":null,"code":"var _jsxFileName = \"/home/tania/react/Clase/formulariopiel/src/componentes/preguntas.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Card, CardTitle, Col, Row } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pregunta(props) {\n  _s();\n  const [colores, setColores] = useState(() => {\n    const colorinicial = {};\n    props.preguns.map((pregunta, index) => {\n      colorinicial[index] = pregunta.respuestas.map(() => props.color[0]);\n    });\n    return colorinicial;\n  });\n\n  // Usar un estado para rastrear el último botón seleccionado en cada tarjeta\n  const [botonclick, setBotonclick] = useState({});\n  const handleClick = (i, bi, valor) => {\n    // Verificar si el botón seleccionado ya está marcado\n    if (botonclick[i] === bt) {\n      return; // No hacer nada si el botón ya está marcado\n    }\n\n    // Crear una copia del objeto de colores\n    const nuevocolor = {\n      ...colores\n    };\n    // Cambiar el color del botón presionado en la tarjeta específica\n    // Desmarcar todos los botones en la tarjeta\n    nuevocolor[i] = nuevocolor[i].map((color, index) => {\n      return index === bi ? props.color[1] : props.color[0];\n    });\n    // Actualizar el estado de los colores\n    setColores(nuevocolor);\n    // Guardar el índice del último botón seleccionado en esta tarjeta\n    setBotonclick({\n      ...botonclick,\n      [i]: bi\n    });\n    // Sumar el valor del botón al contador\n    props.contar(valor);\n  };\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      sm: \"6\",\n      children: props.preguns.map((pregunta, i) => /*#__PURE__*/_jsxDEV(Card, {\n        body: true,\n        className: \"my-2\",\n        style: {\n          width: '30rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h5\",\n          children: pregunta.texto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), pregunta.respuestas.map((respuesta, bi) => /*#__PURE__*/_jsxDEV(Button, {\n          color: colores[i][bi] // Usar el color correspondiente desde el estado\n          ,\n          outline: true,\n          onClick: () => handleClick(i, bi, respuesta.valor),\n          children: respuesta.respuesta\n        }, bi, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this))]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(Pregunta, \"WCmK+oHu7/A7OATaKYmu9UJwz40=\");\n_c = Pregunta;\n/*#__PURE__*/_jsxDEV(\"a\", {\n  href: \"fjkdfjdf\",\n  children: \"pincha aqui\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 70,\n  columnNumber: 1\n}, this);\nvar _c;\n$RefreshReg$(_c, \"Pregunta\");","map":{"version":3,"names":["React","useState","Button","Card","CardTitle","Col","Row","jsxDEV","_jsxDEV","Pregunta","props","_s","colores","setColores","colorinicial","preguns","map","pregunta","index","respuestas","color","botonclick","setBotonclick","handleClick","i","bi","valor","bt","nuevocolor","contar","children","sm","body","className","style","width","tag","texto","fileName","_jsxFileName","lineNumber","columnNumber","respuesta","outline","onClick","_c","href","$RefreshReg$"],"sources":["/home/tania/react/Clase/formulariopiel/src/componentes/preguntas.js"],"sourcesContent":["import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Card, CardTitle, Col, Row } from 'reactstrap';\n\nexport default function Pregunta(props) {\n  \n    const [colores, setColores] = useState(() => {\n        const colorinicial = {};\n        props.preguns.map((pregunta, index) => {\n            colorinicial[index] = pregunta.respuestas.map(() => props.color[0]);\n        });\n        return colorinicial;\n    });\n\n    // Usar un estado para rastrear el último botón seleccionado en cada tarjeta\n    const [botonclick, setBotonclick] = useState({});\n\n    const handleClick = (i, bi, valor) => {\n        // Verificar si el botón seleccionado ya está marcado\n        if (botonclick[i] === bt) {\n            return; // No hacer nada si el botón ya está marcado\n        }\n\n        // Crear una copia del objeto de colores\n        const nuevocolor = { ...colores };\n        // Cambiar el color del botón presionado en la tarjeta específica\n        // Desmarcar todos los botones en la tarjeta\n        nuevocolor[i] = nuevocolor[i].map((color, index) => {\n            return index === bi ? props.color[1] : props.color[0];\n        });\n        // Actualizar el estado de los colores\n        setColores(nuevocolor);\n        // Guardar el índice del último botón seleccionado en esta tarjeta\n        setBotonclick({ ...botonclick, [i]: bi });\n        // Sumar el valor del botón al contador\n        props.contar(valor);\n    };\n\n    return (\n        <Row>\n            <Col sm=\"6\">\n                {props.preguns.map((pregunta, i) => (\n                    <Card\n                        key={i}\n                        body\n                        className=\"my-2\"\n                        style={{ width: '30rem' }}\n                    >\n                        <CardTitle tag=\"h5\">{pregunta.texto}</CardTitle>\n                        {pregunta.respuestas.map((respuesta, bi) => (\n                            <Button\n                                key={bi}\n                                color={colores[i][bi]} // Usar el color correspondiente desde el estado\n                                outline\n                                onClick={() => handleClick(i, bi, respuesta.valor)}\n                            >\n                                {respuesta.respuesta}\n                            </Button>\n                        ))}\n                    </Card>\n                ))}\n            </Col>\n        </Row>\n    );\n}\n\n\n\n\n<a href='fjkdfjdf'>pincha aqui</a>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}